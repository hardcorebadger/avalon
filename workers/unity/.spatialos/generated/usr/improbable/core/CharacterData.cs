// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.core.CharacterData in improbable/core/Character.schema.

namespace Improbable.Core
{

public partial struct CharacterData : global::System.IEquatable<CharacterData>
{
  /// <summary>
  /// Field player_id = 1.
  /// </summary>
  public int playerId;

  public CharacterData(int playerId)
  {
    this.playerId = playerId;
  }

  public CharacterData DeepCopy()
  {
    var _result = new CharacterData();
    _result.playerId = playerId;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is CharacterData && Equals((CharacterData) _obj);
  }

  public static bool operator==(CharacterData a, CharacterData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(CharacterData a, CharacterData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(CharacterData _obj)
  {
    return
        playerId == _obj.playerId;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + playerId.GetHashCode();
    return _result;
  }
}

public static class CharacterData_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.PbioHandlePool _pool,
                                  CharacterData _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      global::Improbable.Worker.Internal.Pbio.AddInt32(_obj, 1, _data.playerId);
    }
  }

  public static unsafe CharacterData Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    CharacterData _data;
    {
      _data.playerId = global::Improbable.Worker.Internal.Pbio.GetInt32(_obj, 1);
    }
    return _data;
  }
}

}
