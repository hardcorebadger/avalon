// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.core.GotoRequest in improbable/core/Character.schema.

namespace Improbable.Core
{

public partial struct GotoRequest : global::System.IEquatable<GotoRequest>
{
  /// <summary>
  /// Field target_position = 1.
  /// </summary>
  public global::Improbable.Vector3d targetPosition;

  public GotoRequest(global::Improbable.Vector3d targetPosition)
  {
    this.targetPosition = targetPosition;
  }

  public GotoRequest DeepCopy()
  {
    var _result = new GotoRequest();
    _result.targetPosition = targetPosition.DeepCopy();
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is GotoRequest && Equals((GotoRequest) _obj);
  }

  public static bool operator==(GotoRequest a, GotoRequest b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(GotoRequest a, GotoRequest b)
  {
    return !a.Equals(b);
  }

  public bool Equals(GotoRequest _obj)
  {
    return
        targetPosition == _obj.targetPosition;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + targetPosition.GetHashCode();
    return _result;
  }
}

public static class GotoRequest_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.PbioHandlePool _pool,
                                  GotoRequest _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      global::Improbable.Vector3d_Internal.Write(_pool, _data.targetPosition, global::Improbable.Worker.Internal.Pbio.AddObject(_obj, 1));
    }
  }

  public static unsafe GotoRequest Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    GotoRequest _data;
    {
      _data.targetPosition = global::Improbable.Vector3d_Internal.Read(global::Improbable.Worker.Internal.Pbio.GetObject(_obj, 1));
    }
    return _data;
  }
}

}
